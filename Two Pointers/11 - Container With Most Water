# Python 3

# Brute Force 
# Time limit exceed!! Bad solution! Time complexity is O(n^2) 

class Solution:
    def maxArea(self, height: List[int]) -> int:
        max_weight = 0
        for l in range(len(height)-1):
            for r in range(l+1, len(height)):
                weight = (r-l) * min(height[l], height[r])
                max_weight = max(max_weight, weight)
        return max_weight
        
# Two Pointers
# Linear time solution

class Solution:
    def maxArea(self, height: List[int]) -> int:
        max_weight = 0
        left, right = 0, len(height)-1
    
        while left < right:
            weight = min(height[left], height[right]) * (right-left)
            max_weight = max(weight, max_weight)
            if height[left]<height[right]:
                left += 1
            else: 
                right -= 1
        return max_weight
