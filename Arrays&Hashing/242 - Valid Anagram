# Python3

# First Version

class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        if len(s)!=len(t):
            return False
        s_set = set(s)
        t_set = set(t)
        if (s_set != t_set)  :
            return False
        
        s_dict = dict()
        for x in s:
            s_dict[x] = s_dict.get(x,0)+1
        for x in t:
            if s_dict.get(x) == 0:
                return False
            else:
                s_dict[x] = s_dict.get(x)-1
        return True
        
# Second Version
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        if len(s) != len(t):
            return False
        
        countS, countT = {}, {}
        
        for i in range(len(s)):
            countS[s[i]] = 1 + countS.get(s[i], 0)
            countT[t[i]] = 1 + countT.get(t[i], 0)
        for c in countS:
            if countS[c] != countT.get(c, 0):
                return False
        return True
        
# Thoughts:
# If the return result is bool value, put the edge case justification part at the beginning of the code to shorten the time
